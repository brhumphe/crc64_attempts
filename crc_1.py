# Portions Copyright (c) 1996-2001, PostgreSQL Global Development Group
# (Any use permitted, subject to terms of PostgreSQL license; see.)

# If we have a 64-bit integer type, then a 64-bit CRC looks just like the
# usual sort of implementation. (See Ross Williams' excellent introduction
# A PAINLESS GUIDE TO CRC ERROR DETECTION ALGORITHMS, available from
# ftp://ftp.rocksoft.com/papers/crc_v3.txt or several other net sites.)
# If we have no working 64-bit type, then fake it with two 32-bit registers.
#
# The present implementation is a normal (not "reflected", in Williams'
# terms) 64-bit CRC, using initial all-ones register contents and a final
# bit inversion. The chosen polynomial is borrowed from the DLT1 spec
# (ECMA-182, available from http://www.ecma.ch/ecma1/STAND/ECMA-182.HTM):
#
# x^64 + x^62 + x^57 + x^55 + x^54 + x^53 + x^52 + x^47 + x^46 + x^45 +
# x^40 + x^39 + x^38 + x^37 + x^35 + x^33 + x^32 + x^31 + x^29 + x^27 +
# x^24 + x^23 + x^22 + x^21 + x^19 + x^17 + x^13 + x^12 + x^10 + x^9 +

# crc_table = [
#         0x0000000000000000, 0x42F0E1EBA9EA3693,
#         0x85E1C3D753D46D26, 0xC711223CFA3E5BB5,
#         0x493366450E42ECDF, 0x0BC387AEA7A8DA4C,
#         0xCCD2A5925D9681F9, 0x8E224479F47CB76A,
#         0x9266CC8A1C85D9BE, 0xD0962D61B56FEF2D,
#         0x17870F5D4F51B498, 0x5577EEB6E6BB820B,
#         0xDB55AACF12C73561, 0x99A54B24BB2D03F2,
#         0x5EB4691841135847, 0x1C4488F3E8F96ED4,
#         0x663D78FF90E185EF, 0x24CD9914390BB37C,
#         0xE3DCBB28C335E8C9, 0xA12C5AC36ADFDE5A,
#         0x2F0E1EBA9EA36930, 0x6DFEFF5137495FA3,
#         0xAAEFDD6DCD770416, 0xE81F3C86649D3285,
#         0xF45BB4758C645C51, 0xB6AB559E258E6AC2,
#         0x71BA77A2DFB03177, 0x334A9649765A07E4,
#         0xBD68D2308226B08E, 0xFF9833DB2BCC861D,
#         0x388911E7D1F2DDA8, 0x7A79F00C7818EB3B,
#         0xCC7AF1FF21C30BDE, 0x8E8A101488293D4D,
#         0x499B3228721766F8, 0x0B6BD3C3DBFD506B,
#         0x854997BA2F81E701, 0xC7B97651866BD192,
#         0x00A8546D7C558A27, 0x4258B586D5BFBCB4,
#         0x5E1C3D753D46D260, 0x1CECDC9E94ACE4F3,
#         0xDBFDFEA26E92BF46, 0x990D1F49C77889D5,
#         0x172F5B3033043EBF, 0x55DFBADB9AEE082C,
#         0x92CE98E760D05399, 0xD03E790CC93A650A,
#         0xAA478900B1228E31, 0xE8B768EB18C8B8A2,
#         0x2FA64AD7E2F6E317, 0x6D56AB3C4B1CD584,
#         0xE374EF45BF6062EE, 0xA1840EAE168A547D,
#         0x66952C92ECB40FC8, 0x2465CD79455E395B,
#         0x3821458AADA7578F, 0x7AD1A461044D611C,
#         0xBDC0865DFE733AA9, 0xFF3067B657990C3A,
#         0x711223CFA3E5BB50, 0x33E2C2240A0F8DC3,
#         0xF4F3E018F031D676, 0xB60301F359DBE0E5,
#         0xDA050215EA6C212F, 0x98F5E3FE438617BC,
#         0x5FE4C1C2B9B84C09, 0x1D14202910527A9A,
#         0x93366450E42ECDF0, 0xD1C685BB4DC4FB63,
#         0x16D7A787B7FAA0D6, 0x5427466C1E109645,
#         0x4863CE9FF6E9F891, 0x0A932F745F03CE02,
#         0xCD820D48A53D95B7, 0x8F72ECA30CD7A324,
#         0x0150A8DAF8AB144E, 0x43A04931514122DD,
#         0x84B16B0DAB7F7968, 0xC6418AE602954FFB,
#         0xBC387AEA7A8DA4C0, 0xFEC89B01D3679253,
#         0x39D9B93D2959C9E6, 0x7B2958D680B3FF75,
#         0xF50B1CAF74CF481F, 0xB7FBFD44DD257E8C,
#         0x70EADF78271B2539, 0x321A3E938EF113AA,
#         0x2E5EB66066087D7E, 0x6CAE578BCFE24BED,
#         0xABBF75B735DC1058, 0xE94F945C9C3626CB,
#         0x676DD025684A91A1, 0x259D31CEC1A0A732,
#         0xE28C13F23B9EFC87, 0xA07CF2199274CA14,
#         0x167FF3EACBAF2AF1, 0x548F120162451C62,
#         0x939E303D987B47D7, 0xD16ED1D631917144,
#         0x5F4C95AFC5EDC62E, 0x1DBC74446C07F0BD,
#         0xDAAD56789639AB08, 0x985DB7933FD39D9B,
#         0x84193F60D72AF34F, 0xC6E9DE8B7EC0C5DC,
#         0x01F8FCB784FE9E69, 0x43081D5C2D14A8FA,
#         0xCD2A5925D9681F90, 0x8FDAB8CE70822903,
#         0x48CB9AF28ABC72B6, 0x0A3B7B1923564425,
#         0x70428B155B4EAF1E, 0x32B26AFEF2A4998D,
#         0xF5A348C2089AC238, 0xB753A929A170F4AB,
#         0x3971ED50550C43C1, 0x7B810CBBFCE67552,
#         0xBC902E8706D82EE7, 0xFE60CF6CAF321874,
#         0xE224479F47CB76A0, 0xA0D4A674EE214033,
#         0x67C58448141F1B86, 0x253565A3BDF52D15,
#         0xAB1721DA49899A7F, 0xE9E7C031E063ACEC,
#         0x2EF6E20D1A5DF759, 0x6C0603E6B3B7C1CA,
#         0xF6FAE5C07D3274CD, 0xB40A042BD4D8425E,
#         0x731B26172EE619EB, 0x31EBC7FC870C2F78,
#         0xBFC9838573709812, 0xFD39626EDA9AAE81,
#         0x3A28405220A4F534, 0x78D8A1B9894EC3A7,
#         0x649C294A61B7AD73, 0x266CC8A1C85D9BE0,
#         0xE17DEA9D3263C055, 0xA38D0B769B89F6C6,
#         0x2DAF4F0F6FF541AC, 0x6F5FAEE4C61F773F,
#         0xA84E8CD83C212C8A, 0xEABE6D3395CB1A19,
#         0x90C79D3FEDD3F122, 0xD2377CD44439C7B1,
#         0x15265EE8BE079C04, 0x57D6BF0317EDAA97,
#         0xD9F4FB7AE3911DFD, 0x9B041A914A7B2B6E,
#         0x5C1538ADB04570DB, 0x1EE5D94619AF4648,
#         0x02A151B5F156289C, 0x4051B05E58BC1E0F,
#         0x87409262A28245BA, 0xC5B073890B687329,
#         0x4B9237F0FF14C443, 0x0962D61B56FEF2D0,
#         0xCE73F427ACC0A965, 0x8C8315CC052A9FF6,
#         0x3A80143F5CF17F13, 0x7870F5D4F51B4980,
#         0xBF61D7E80F251235, 0xFD913603A6CF24A6,
#         0x73B3727A52B393CC, 0x31439391FB59A55F,
#         0xF652B1AD0167FEEA, 0xB4A25046A88DC879,
#         0xA8E6D8B54074A6AD, 0xEA16395EE99E903E,
#         0x2D071B6213A0CB8B, 0x6FF7FA89BA4AFD18,
#         0xE1D5BEF04E364A72, 0xA3255F1BE7DC7CE1,
#         0x64347D271DE22754, 0x26C49CCCB40811C7,
#         0x5CBD6CC0CC10FAFC, 0x1E4D8D2B65FACC6F,
#         0xD95CAF179FC497DA, 0x9BAC4EFC362EA149,
#         0x158E0A85C2521623, 0x577EEB6E6BB820B0,
#         0x906FC95291867B05, 0xD29F28B9386C4D96,
#         0xCEDBA04AD0952342, 0x8C2B41A1797F15D1,
#         0x4B3A639D83414E64, 0x09CA82762AAB78F7,
#         0x87E8C60FDED7CF9D, 0xC51827E4773DF90E,
#         0x020905D88D03A2BB, 0x40F9E43324E99428,
#         0x2CFFE7D5975E55E2, 0x6E0F063E3EB46371,
#         0xA91E2402C48A38C4, 0xEBEEC5E96D600E57,
#         0x65CC8190991CB93D, 0x273C607B30F68FAE,
#         0xE02D4247CAC8D41B, 0xA2DDA3AC6322E288,
#         0xBE992B5F8BDB8C5C, 0xFC69CAB42231BACF,
#         0x3B78E888D80FE17A, 0x7988096371E5D7E9,
#         0xF7AA4D1A85996083, 0xB55AACF12C735610,
#         0x724B8ECDD64D0DA5, 0x30BB6F267FA73B36,
#         0x4AC29F2A07BFD00D, 0x08327EC1AE55E69E,
#         0xCF235CFD546BBD2B, 0x8DD3BD16FD818BB8,
#         0x03F1F96F09FD3CD2, 0x41011884A0170A41,
#         0x86103AB85A2951F4, 0xC4E0DB53F3C36767,
#         0xD8A453A01B3A09B3, 0x9A54B24BB2D03F20,
#         0x5D45907748EE6495, 0x1FB5719CE1045206,
#         0x919735E51578E56C, 0xD367D40EBC92D3FF,
#         0x1476F63246AC884A, 0x568617D9EF46BED9,
#         0xE085162AB69D5E3C, 0xA275F7C11F7768AF,
#         0x6564D5FDE549331A, 0x279434164CA30589,
#         0xA9B6706FB8DFB2E3, 0xEB46918411358470,
#         0x2C57B3B8EB0BDFC5, 0x6EA7525342E1E956,
#         0x72E3DAA0AA188782, 0x30133B4B03F2B111,
#         0xF7021977F9CCEAA4, 0xB5F2F89C5026DC37,
#         0x3BD0BCE5A45A6B5D, 0x79205D0E0DB05DCE,
#         0xBE317F32F78E067B, 0xFCC19ED95E6430E8,
#         0x86B86ED5267CDBD3, 0xC4488F3E8F96ED40,
#         0x0359AD0275A8B6F5, 0x41A94CE9DC428066,
#         0xCF8B0890283E370C, 0x8D7BE97B81D4019F,
#         0x4A6ACB477BEA5A2A, 0x089A2AACD2006CB9,
#         0x14DEA25F3AF9026D, 0x562E43B4931334FE,
#         0x913F6188692D6F4B, 0xD3CF8063C0C759D8,
#         0x5DEDC41A34BBEEB2, 0x1F1D25F19D51D821,
#         0xD80C07CD676F8394, 0x9AFCE626CE85B507
# ]

# Rhett's table
crc_table = [
        0x0000000000000000, 0x7ad870c830358979,
        0xf5b0e190606b12f2, 0x8f689158505e9b8b,
        0xc038e5739841b68f, 0xbae095bba8743ff6,
        0x358804e3f82aa47d, 0x4f50742bc81f2d04,
        0xab28ecb46814fe75, 0xd1f09c7c5821770c,
        0x5e980d24087fec87, 0x24407dec384a65fe,
        0x6b1009c7f05548fa, 0x11c8790fc060c183,
        0x9ea0e857903e5a08, 0xe478989fa00bd371,
        0x7d08ff3b88be6f81, 0x07d08ff3b88be6f8,
        0x88b81eabe8d57d73, 0xf2606e63d8e0f40a,
        0xbd301a4810ffd90e, 0xc7e86a8020ca5077,
        0x4880fbd87094cbfc, 0x32588b1040a14285,
        0xd620138fe0aa91f4, 0xacf86347d09f188d,
        0x2390f21f80c18306, 0x594882d7b0f40a7f,
        0x1618f6fc78eb277b, 0x6cc0863448deae02,
        0xe3a8176c18803589, 0x997067a428b5bcf0,
        0xfa11fe77117cdf02, 0x80c98ebf2149567b,
        0x0fa11fe77117cdf0, 0x75796f2f41224489,
        0x3a291b04893d698d, 0x40f16bccb908e0f4,
        0xcf99fa94e9567b7f, 0xb5418a5cd963f206,
        0x513912c379682177, 0x2be1620b495da80e,
        0xa489f35319033385, 0xde51839b2936bafc,
        0x9101f7b0e12997f8, 0xebd98778d11c1e81,
        0x64b116208142850a, 0x1e6966e8b1770c73,
        0x8719014c99c2b083, 0xfdc17184a9f739fa,
        0x72a9e0dcf9a9a271, 0x08719014c99c2b08,
        0x4721e43f0183060c, 0x3df994f731b68f75,
        0xb29105af61e814fe, 0xc849756751dd9d87,
        0x2c31edf8f1d64ef6, 0x56e99d30c1e3c78f,
        0xd9810c6891bd5c04, 0xa3597ca0a188d57d,
        0xec09088b6997f879, 0x96d1784359a27100,
        0x19b9e91b09fcea8b, 0x636199d339c963f2,
        0xdf7adabd7a6e2d6f, 0xa5a2aa754a5ba416,
        0x2aca3b2d1a053f9d, 0x50124be52a30b6e4,
        0x1f423fcee22f9be0, 0x659a4f06d21a1299,
        0xeaf2de5e82448912, 0x902aae96b271006b,
        0x74523609127ad31a, 0x0e8a46c1224f5a63,
        0x81e2d7997211c1e8, 0xfb3aa75142244891,
        0xb46ad37a8a3b6595, 0xceb2a3b2ba0eecec,
        0x41da32eaea507767, 0x3b024222da65fe1e,
        0xa2722586f2d042ee, 0xd8aa554ec2e5cb97,
        0x57c2c41692bb501c, 0x2d1ab4dea28ed965,
        0x624ac0f56a91f461, 0x1892b03d5aa47d18,
        0x97fa21650afae693, 0xed2251ad3acf6fea,
        0x095ac9329ac4bc9b, 0x7382b9faaaf135e2,
        0xfcea28a2faafae69, 0x8632586aca9a2710,
        0xc9622c4102850a14, 0xb3ba5c8932b0836d,
        0x3cd2cdd162ee18e6, 0x460abd1952db919f,
        0x256b24ca6b12f26d, 0x5fb354025b277b14,
        0xd0dbc55a0b79e09f, 0xaa03b5923b4c69e6,
        0xe553c1b9f35344e2, 0x9f8bb171c366cd9b,
        0x10e3202993385610, 0x6a3b50e1a30ddf69,
        0x8e43c87e03060c18, 0xf49bb8b633338561,
        0x7bf329ee636d1eea, 0x012b592653589793,
        0x4e7b2d0d9b47ba97, 0x34a35dc5ab7233ee,
        0xbbcbcc9dfb2ca865, 0xc113bc55cb19211c,
        0x5863dbf1e3ac9dec, 0x22bbab39d3991495,
        0xadd33a6183c78f1e, 0xd70b4aa9b3f20667,
        0x985b3e827bed2b63, 0xe2834e4a4bd8a21a,
        0x6debdf121b863991, 0x1733afda2bb3b0e8,
        0xf34b37458bb86399, 0x8993478dbb8deae0,
        0x06fbd6d5ebd3716b, 0x7c23a61ddbe6f812,
        0x3373d23613f9d516, 0x49aba2fe23cc5c6f,
        0xc6c333a67392c7e4, 0xbc1b436e43a74e9d,
        0x95ac9329ac4bc9b5, 0xef74e3e19c7e40cc,
        0x601c72b9cc20db47, 0x1ac40271fc15523e,
        0x5594765a340a7f3a, 0x2f4c0692043ff643,
        0xa02497ca54616dc8, 0xdafce7026454e4b1,
        0x3e847f9dc45f37c0, 0x445c0f55f46abeb9,
        0xcb349e0da4342532, 0xb1eceec59401ac4b,
        0xfebc9aee5c1e814f, 0x8464ea266c2b0836,
        0x0b0c7b7e3c7593bd, 0x71d40bb60c401ac4,
        0xe8a46c1224f5a634, 0x927c1cda14c02f4d,
        0x1d148d82449eb4c6, 0x67ccfd4a74ab3dbf,
        0x289c8961bcb410bb, 0x5244f9a98c8199c2,
        0xdd2c68f1dcdf0249, 0xa7f41839ecea8b30,
        0x438c80a64ce15841, 0x3954f06e7cd4d138,
        0xb63c61362c8a4ab3, 0xcce411fe1cbfc3ca,
        0x83b465d5d4a0eece, 0xf96c151de49567b7,
        0x76048445b4cbfc3c, 0x0cdcf48d84fe7545,
        0x6fbd6d5ebd3716b7, 0x15651d968d029fce,
        0x9a0d8ccedd5c0445, 0xe0d5fc06ed698d3c,
        0xaf85882d2576a038, 0xd55df8e515432941,
        0x5a3569bd451db2ca, 0x20ed197575283bb3,
        0xc49581ead523e8c2, 0xbe4df122e51661bb,
        0x3125607ab548fa30, 0x4bfd10b2857d7349,
        0x04ad64994d625e4d, 0x7e7514517d57d734,
        0xf11d85092d094cbf, 0x8bc5f5c11d3cc5c6,
        0x12b5926535897936, 0x686de2ad05bcf04f,
        0xe70573f555e26bc4, 0x9ddd033d65d7e2bd,
        0xd28d7716adc8cfb9, 0xa85507de9dfd46c0,
        0x273d9686cda3dd4b, 0x5de5e64efd965432,
        0xb99d7ed15d9d8743, 0xc3450e196da80e3a,
        0x4c2d9f413df695b1, 0x36f5ef890dc31cc8,
        0x79a59ba2c5dc31cc, 0x037deb6af5e9b8b5,
        0x8c157a32a5b7233e, 0xf6cd0afa9582aa47,
        0x4ad64994d625e4da, 0x300e395ce6106da3,
        0xbf66a804b64ef628, 0xc5bed8cc867b7f51,
        0x8aeeace74e645255, 0xf036dc2f7e51db2c,
        0x7f5e4d772e0f40a7, 0x05863dbf1e3ac9de,
        0xe1fea520be311aaf, 0x9b26d5e88e0493d6,
        0x144e44b0de5a085d, 0x6e963478ee6f8124,
        0x21c640532670ac20, 0x5b1e309b16452559,
        0xd476a1c3461bbed2, 0xaeaed10b762e37ab,
        0x37deb6af5e9b8b5b, 0x4d06c6676eae0222,
        0xc26e573f3ef099a9, 0xb8b627f70ec510d0,
        0xf7e653dcc6da3dd4, 0x8d3e2314f6efb4ad,
        0x0256b24ca6b12f26, 0x788ec2849684a65f,
        0x9cf65a1b368f752e, 0xe62e2ad306bafc57,
        0x6946bb8b56e467dc, 0x139ecb4366d1eea5,
        0x5ccebf68aecec3a1, 0x2616cfa09efb4ad8,
        0xa97e5ef8cea5d153, 0xd3a62e30fe90582a,
        0xb0c7b7e3c7593bd8, 0xca1fc72bf76cb2a1,
        0x45775673a732292a, 0x3faf26bb9707a053,
        0x70ff52905f188d57, 0x0a2722586f2d042e,
        0x854fb3003f739fa5, 0xff97c3c80f4616dc,
        0x1bef5b57af4dc5ad, 0x61372b9f9f784cd4,
        0xee5fbac7cf26d75f, 0x9487ca0fff135e26,
        0xdbd7be24370c7322, 0xa10fceec0739fa5b,
        0x2e675fb4576761d0, 0x54bf2f7c6752e8a9,
        0xcdcf48d84fe75459, 0xb71738107fd2dd20,
        0x387fa9482f8c46ab, 0x42a7d9801fb9cfd2,
        0x0df7adabd7a6e2d6, 0x772fdd63e7936baf,
        0xf8474c3bb7cdf024, 0x829f3cf387f8795d,
        0x66e7a46c27f3aa2c, 0x1c3fd4a417c62355,
        0x935745fc4798b8de, 0xe98f353477ad31a7,
        0xa6df411fbfb21ca3, 0xdc0731d78f8795da,
        0x536fa08fdfd90e51, 0x29b7d047efec8728
]


class CRC64(object):
    
    def __init__(self):
        self.crc = 0xffffffffffffffff
    
    def append(self, buffer):
        for c in buffer:
            tab_index = ((self.crc >> 56) ^ ord(c)) & 0xFF
            self.crc = crc_table[tab_index] ^ ((self.crc << 8) &
                                               0xffffffffffffffff)
    
    def finish(self):
        return self.crc ^ 0x0


def crc64(buffer):
    crc = CRC64()
    crc.append(buffer)
    
    return crc.finish()


if __name__ == '__main__':
    hashed = crc64('{NAMELIST')
    actual = 0x4137cc65bd97fd30
    # print(hashed)
    print(hex(hashed))
    print(hex(actual))
    # assert crc64('{NAMELIST}') == actual